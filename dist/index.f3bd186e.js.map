{"mappings":"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","sources":["public/script.js"],"sourcesContent":["// Store the element with the class 'content' as a variable for later use\nlet content = document.querySelector('.content');\n\n// Create new request for data and store as variable\nvar request = new XMLHttpRequest();\n\n// Open a connection to the API endpoint,\n//  passing in the arguments: (HTTP METHOD, URL ENDPOINT)\nrequest.open('GET', 'https://ghibliapi.herokuapp.com/films');\n\n\n// When the URL loads\nrequest.onload = function () {\n\n  // Parse the response from the API as JSON data and store in a variable\n  let data = JSON.parse(this.response);\n  // console.log(data); // Uncomment to see the returned response\n\n  // Check the status codes to see if the request was successful\n  if (request.status >= 200 && request.status < 400) {\n\n    // Loop through each item in the returned array\n    data.forEach(function(movie) {\n      // console.log(movie) // Uncomment to see each array item stored as movie\n\n      /* ------------------------------------------------------\n      Create and configure the HTML elements to house the data\n      ------------------------------------------------------ */\n\n      // Card container\n      let card = document.createElement('div');\n      card.setAttribute('class', 'card');\n\n      // Title Heading\n      let heading = document.createElement('h1');\n      heading.textContent = movie.title;\n\n      // Description Paragraph\n      let paragraph = document.createElement('p');\n      movie.description = movie.description.substring(0, 300);\n      paragraph.textContent = `${movie.description}...`;\n\n      // Append the card to the main content container (Step 1)\n      content.appendChild(card);\n\n      // Append all the sub elements to the card container\n      card.appendChild(heading);\n      card.appendChild(paragraph);\n\n\n      /* -----------------------\n      EXERCISE 3 - LOCAL STORAGE\n      ----------------------- */\n\n      // Create favourites button HTML Element\n      let button = document.createElement('button');\n      button.textContent = \"Add to Favourites\";\n\n      //Append favourites button to card container\n      card.appendChild(button);\n\n      // Add an event listener to the button\n      button.addEventListener(\"click\", function(event) {\n\n        // Create a key to store the movie title\n        // This must be a string, and needs to be unique for each movie, otherwise will overwirte existing localStorage\n        // HINT: Find out how many items are in local storage, then add 1\n        let key = (localStorage.length + 1).toString();\n\n        // Store the value of the movie title as a variable\n        // HINT: Get the title from the <h1> element in the parent card container\n        var value = this.parentNode.getElementsByTagName('h1')[0].textContent;\n\n        // console.log(key, value); // Uncomment to see the key value pair\n\n\n        // var toSearch = value;\n        // if(localStorage.key(i).indexOf(toSearch)!=-1) {\n        //\n        // //   console.log(value);\n        // // //   // Add the key/value pair to localStorage\n        //   localStorage.setItem(key, value);\n        // }\n\n        // Create variable to store whether the value exists\n        let exists = false;\n        // loop through items in storage\n        for(var i=0; i<localStorage.length; i++) {\n            // compare each value for every key in local storage with input value from user\n            if(localStorage.getItem(localStorage.key(i)) == value) {\n              // set exists to true only if value found\n              exists = true;\n            }\n        }\n        // check exists boolean and add item if value doesn't exist\n        if (exists == false){\n          localStorage.setItem(key, value);\n        }\n        // Call the updateFavourites() function to refresh the list of movies\n        updateFavourites();\n      });\n\n\n\n\n    });\n\n  } else {\n    // Handle error if API reqest is not successful\n    let errorMessage = document.createElement('p');\n    errorMessage.textContent = 'Error, unable to access API. Error: ' + request.status;\n    content.appendChild(errorMessage);\n  }\n}\n\n// Send request for processing - important that this is after the onload function\nrequest.send();\n\n/* -----------------------\nEXERCISE 3 - LOCAL STORAGE\nLEAVE THE FOLLOWING CODE\n----------------------- */\n\nupdateFavourites();\n\n\nlet clearButton = document.getElementById(\"clear\");\nclearButton.addEventListener(\"click\", function(){\n  localStorage.clear();\n  updateFavourites();\n})\n\nfunction updateFavourites(){\n  let list = document.querySelector(\"aside ul\");\n  list.innerHTML = \"\";\n  if (localStorage.length > 0) {\n    for (let i = 0; i < localStorage.length; i++){\n      let key = localStorage.key(i);\n      let value = localStorage.getItem(key);\n      // console.log(key, value);\n      let listItem = document.createElement(\"li\");\n      listItem.textContent = value;\n      list.appendChild(listItem);\n    }\n  }\n  console.log(localStorage);\n}\n"],"names":[],"version":3,"file":"index.f3bd186e.js.map","sourceRoot":"/__parcel_source_root/"}